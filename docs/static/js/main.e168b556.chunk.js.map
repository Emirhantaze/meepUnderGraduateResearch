{"version":3,"sources":["components/Navbar.jsx","DataContext.jsx","ViewPortContext.jsx","components/SimShow.jsx","lib/MathOperations.js","components/SimAddData.jsx","App.jsx","index.js"],"names":["Navbar","className","href","DataContext","createContext","DataContextProvider","props","useState","data","dataSetter","Provider","value","children","viewportContext","React","useViewport","useContext","width","height","ViewportProvider","window","innerWidth","setWidth","innerHeight","setHeight","handleWindowResize","useEffect","addEventListener","removeEventListener","SimShow","layout","title","config","scrollZoom","useResizeHandler","style","divideTwoArray","array1","array2","map","key","square","array","SimAddData","selectedOption","selectedPolarization","selectedRatio","selectedST","selectedDataType","state","setstate","ratioTypeCount","Object","keys","entries","result","spacingTypeCount","ttext","Other_Params","split","type","onClick","alt","src","uuid","iter","check","x","Wavelengths","y","divide","alert","transform","App","require","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e168b556.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-dark bg-dark\">>\n  <a className=\"navbar-brand\" href=\"https://github.com/emtiyl/meepUnderGraduateResearch\">Github Page</a>\n\n    <ul className=\"navbar-nav mr-auto list-group-horizontal\">\n      <li className=\"nav-item mr-2\">\n        <a className=\"nav-link\" href=\"https://github.com/emtiyl/meepUnderGraduateResearch/graphs/contributors\">Contributers <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"https://github.com/emtiyl/meepUnderGraduateResearch/blob/master/README.md\">ReadMe</a>\n      </li>\n    </ul>\n    <span className=\"navbar-text\">\n      Stretching Transmission Spectrum Simulations of Gold with Meep\n    </span>\n\n</nav>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { createContext } from 'react'\n\n\nexport const DataContext = createContext()\n\n\nexport default function DataContextProvider(props) {\n    const [data,dataSetter] = useState([])\n    return (\n        <div>\n            <DataContext.Provider value={\n                {data:data,dataSetter:dataSetter}\n            }>{props.children}</DataContext.Provider> \n        </div>\n    )\n}\n","import React from \"react\";\n\nexport const viewportContext = React.createContext({});\n\nconst ViewportProvider = ({ children }) => {\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setHeight] = React.useState(window.innerHeight);\n  const handleWindowResize = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return (\n    <viewportContext.Provider value={{ width, height }}>\n      {children}\n    </viewportContext.Provider>\n  );\n};\n\nexport const useViewport = () => {\n    const { width, height } = React.useContext(viewportContext);\n    return { width, height };\n  };\nexport default ViewportProvider","import React from 'react'\nimport Plot from 'react-plotly.js';\nimport { useContext } from 'react';\nimport { DataContext } from '../DataContext';\nimport { useViewport } from '../ViewPortContext';\n\nexport const SimShow = () => {\n  const {width,height} = useViewport()\n  const {data} = useContext(DataContext)\n    return (\n        <div >\n            <Plot \n        data={data}\n        layout={ {title: 'Simulation results'} }\n        config={{scrollZoom: true}}\n        useResizeHandler={true}\n        style={ {width: `${width  }px`, height: `${height/2}px`}}\n      />\n        </div>\n    )\n}\n","export const divideTwoArray = (array1,array2) =>{\n    return array1.map((value,key)=>{\n        return(value/array2[key])\n    }) \n\n}\n\nexport const square = (array) => array.map(value=>value*value)\n","import React, { useContext, useState } from 'react'\nimport { DataContext } from '../DataContext'\nimport uuid from 'uuid/dist/v1'\nimport result from \"../results.json\"\nimport {divideTwoArray as divide,square} from \"../lib/MathOperations\"\nimport { useViewport } from '../ViewPortContext'\n\nexport const SimAddData = () => {\n\tconst {width} = useViewport()\n\tconst [state, setstate] = useState({\n\t\tselectedOption:\"\",\n\t\tselectedPolarization:\"\",\n\t\tselectedRatio:\"\",\n\t\tselectedST:\"\",\n\t\tselectedDataType:\"\"\n\t})\n\tconst {data,dataSetter} = useContext(DataContext)\n\tlet ratioTypeCount = Object.keys(Object.entries(result)[0][1])\n\tlet spacingTypeCount = Object.keys(Object.entries(Object.entries(result)[0][1])[0][1])\n\tlet text = result.Other_Params.split(\",\")\n\tlet ttext = text.map(value=>{\n\t\treturn value+\"\\n\"\n\t})\n\treturn 890 < width?(\n\t\t<div>\n\t\t\t\t\t<div className=\"card text-center\">\n\t\t\t\n\t\t\t<div className=\"card-header rounded text-center\" >\n\t\t\t<h2>Other Simulation Parameters</h2>\n\t  {ttext}\n\t</div></div>\n        <div className=\"card text-center\">\n        <div className=\"card-header rounded\">\n          Select right to left Simulation Specs to add appropriate data to the chart \n        </div>\n        <div className=\"card-body\">\n\t<div className=\"container-fluid m-auto p-auto\">\n\n\t<div className=\"row align-middle\">\n\n\t\t<div className=\"col my-auto\">\n\t\t\t<div className=\"list-group\">\n\t\t\t\t<button type=\"button\" className=\"list-group-item list-group-item-action disabled\"\n\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedOption:\"PolarizationR\"\n\t\t\t\t})}}\n\t\t\t\t>Polarization R.</button>\n\t\t\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tselectedOption:\"Normal\"\n\t\t\t\t\t\t\t})}}>Direct data</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t\t<div className=\"col my-auto\">\n\t\t<div className=\"list-group\">\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\t\t\t\t\n\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedPolarization:\"EZ\"\n\t\t\t\t})}}>Ez</button>\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\tonClick={()=>{setstate({\n\t\t\t...state,\n\t\t\tselectedPolarization:\"EY\"\n\t\t})}}>Ey</button>\n\t\t</div>\n\t\n    </div><div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t\t<div className=\"col my-auto\">\n\t\t\t<div className=\"list-group\">\n\t\t\t\t {ratioTypeCount.map(value => {\n\t\t\t\t\t return <button key={uuid()} type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\t\t onClick={()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedRatio: value\n\t\t\t\t\t\t})\n\t\t\t\t\t }}\n\t\t\t\t\t >{value}</button>\n\t\t\t\t })}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t<div className=\"col my-auto\">\n\t\t\t<div className=\"list-group\">\n\t\t\t\t {spacingTypeCount.map(value => {\n\t\t\t\t\t return <button key={uuid()} type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\t\t onClick={()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedST: value\n\t\t\t\t\t\t})\n\t\t\t\t\t }}\n\t\t\t\t\t >{value}</button>\n\t\t\t\t })}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t<div className=\"col my-auto\"  >\n\t\t<div className=\"list-group\">\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\tonClick={\n\t\t\t()=>{\n\t\t\t\tsetstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedDataType: \"Transmission\"\n\t\t\t\t})\n\t\t\t}\n\t\t}>Transmission</button>\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\tonClick={\n\t\t\t\t\t()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedDataType: \"Reflected\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}>Reflected</button>\n\t\t</div>\n\t</div>\n  </div>\n</div>\n            </div>\n\t<div className=\"card-header rounded\">Selected Simulation Specs: {Object.entries(state).map(iter =>{\n\t\treturn `/${iter[1]}`\n\t})}</div>\n\n      </div>\n\t  <div className=\"text-center\">\n\t  <button type=\"button\" className=\" btn btn-primary mr-3\" \n\t\t  onClick={()=>{\n\t\t\t  let check = true;\n\t\t\t  Object.entries(state).map(iter=>{\n\t\t\t\t  if(iter[1]===\"\")\n\t\t\t\t\tcheck = false;\n\t\t\t\t\treturn true\n\t\t\t  })\n\t\t\t  if(check){\n\t\t\t\t  if(state.selectedOption===\"Direct data\"){\n\t\t\t\tdataSetter([...data,{\n\t\t\t\t\ttype:\"line\",\n\t\t\t\t\tx:result.Wavelengths,\n\t\t\t\t\ty:divide(result[state.selectedPolarization][state.selectedRatio][state.selectedST][state.selectedDataType],result[state.selectedPolarization][state.selectedRatio][state.selectedST][\"Incident\"])\n\t\t\t\t}])}else{\n\t\t\t\t\tdataSetter([...data,{\n\t\t\t\t\t\ttype:\"line\",\n\t\t\t\t\t\tx:result.Wavelengths,\n\t\t\t\t\t\ty:divide(square(result[\"EY\"][state.selectedRatio][state.selectedST][state.selectedDataType]),square(result[\"EZ\"][state.selectedRatio][state.selectedST][\"Incident\"]))\n\n\t\t\t\t\t}])\t\t\t\t\t\n\t\t\t\t}\n\t\t\t  }else{\n\t\t\t\t  alert(\"please select from every part!!!\")\n\t\t\t  } \n\t\t  }}> Add data to Chart</button>\n\t  \t<button type=\"button\" className=\" btn btn-secondary mr-3\" \n\t\t  onClick={()=>{setstate({\n\t\t\t  selectedOption:\"\",\n\t\t\t  selectedPolarization:\"\",\n\t\t\t  selectedRatio:\"\",\n\t\t\t  selectedST:\"\",\n\t\t\t  selectedDataType:\"\"\n\t\t  })}}> Clear changes</button>\n\t\t  <button type=\"button\" className=\" btn btn-secondary \" onClick={()=>{\n\t\t\t  dataSetter([])\n\t\t  }}>Clear Graph</button>\n\t\t  </div>\n\t\t  </div>\n\t):\n\t\n\t\n\t\n\t\n\t/**\n\t * mobile page\n\t */\n\t\n\t\n\t\n\t\n\t\n\t\n\t(<div className=\"p-3 mb-2 bg-info text-dark\">\n\t\t<div className=\"card text-center text-black\">\n\t\t\t\n\t\t        <div className=\"card-header rounded text-center\" >\n\t\t\t\t<h1>Other Simulation Parameters</h1>\n          {ttext}\n        </div></div>\n        <div className=\"card text-center\">\n        <div className=\"card-header rounded text-dark\">\n          Select Simulation Specs to add appropriate data to the chart \n        </div>\n        <div className=\"card-body\">\n\t<div className=\"container-fluid m-auto p-auto\">\n\n\t\t<div className=\"container-fluid\">\n\t\t\t<div className=\"button-group\">\n\t\t\t\t<button type=\"button\" className=\"btn btn-secondary disabled\"\n\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedOption:\"PolarizationR\"\n\t\t\t\t})}}\n\t\t\t\t>Polarization R.</button>\n\t\t\t\t<button type=\"button\" className=\"btn btn-secondary \"\n\t\t\t\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tselectedOption:\"Normal\"\n\t\t\t\t\t\t\t})}}>Direct data</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"my-2\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\",transform: \"rotate(90deg)\"}}></img></div>\n\t\t<div className=\"\">\n\t\t<div className=\"row\">\n\t\t<button type=\"button\" className=\"col btn btn-secondary m-1 p-auto\"\t\t\t\t\n\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedPolarization:\"EZ\"\n\t\t\t\t})}}>Ez</button>\n\t\t<button type=\"button\" className=\"col btn btn-secondary m-1 p-auto\"\n\t\tonClick={()=>{setstate({\n\t\t\t...state,\n\t\t\tselectedPolarization:\"EY\"\n\t\t})}}>Ey</button>\n\t\t</div>\n\t\n    </div><div className=\"my-2\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\",transform: \"rotate(90deg)\"}}></img></div>\n\t\t<div className=\"\">\n\t\t\t<div className=\" row\">\n\t\t\t\t {ratioTypeCount.map(value => {\n\t\t\t\t\t return <button key={uuid()} type=\"button\" className=\" col btn btn-secondary m-1 p-auto\"\n\t\t\t\t\t onClick={()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedRatio: value\n\t\t\t\t\t\t})\n\t\t\t\t\t }}\n\t\t\t\t\t >{value}</button>\n\t\t\t\t })}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div className=\"my-2\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\",transform: \"rotate(90deg)\"}}></img></div>\n\t<div className=\"\">\n\t\t\t<div className=\"row\">\n\t\t\t\t {spacingTypeCount.map(value => {\n\t\t\t\t\t return <button key={uuid()} type=\"button\" className=\"col btn btn-secondary m-1 p-auto\"\n\t\t\t\t\t onClick={()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedST: value\n\t\t\t\t\t\t})\n\t\t\t\t\t }}\n\t\t\t\t\t >{value}</button>\n\t\t\t\t })}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div className=\"my-2\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\",transform: \"rotate(90deg)\"}}></img></div>\n\t<div className=\"\"  >\n\t\t<div className=\"list-group\">\n\t\t<button type=\"button\" className=\"col btn btn-secondary m-1 p-auto\"\n\t\tonClick={\n\t\t\t()=>{\n\t\t\t\tsetstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedDataType: \"Transmission\"\n\t\t\t\t})\n\t\t\t}\n\t\t}>Transmission</button>\n\t\t<button type=\"button\" className=\"col btn btn-secondary m-1 p-auto\"\n\t\t\t\tonClick={\n\t\t\t\t\t()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedDataType: \"Reflected\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}>Reflected</button>\n\t\t</div>\n\t</div>\n\n</div>\n            </div>\n\t<div className=\"card-header rounded\">Selected Simulation Specs: {Object.entries(state).map(iter =>{\n\t\treturn `/${iter[1]}`\n\t})}</div>\n\n      </div>\n\t  <div className=\"text-center\">\n\t  <button type=\"button\" className=\" btn btn-primary mr-1\" \n\t\t  onClick={()=>{\n\t\t\t  let check = true;\n\t\t\t  Object.entries(state).map(iter=>{\n\t\t\t\t  if(iter[1]===\"\")\n\t\t\t\t\tcheck = false;\n\t\t\t\t\treturn true\n\t\t\t  })\n\t\t\t  if(check){\n\t\t\t\t  if(state.selectedOption===\"Direct data\"){\n\t\t\t\tdataSetter([...data,{\n\t\t\t\t\ttype:\"line\",\n\t\t\t\t\tx:result.Wavelengths,\n\t\t\t\t\ty:divide(result[state.selectedPolarization][state.selectedRatio][state.selectedST][state.selectedDataType],result[state.selectedPolarization][state.selectedRatio][state.selectedST][\"Incident\"])\n\t\t\t\t}])}else{\n\t\t\t\t\tdataSetter([...data,{\n\t\t\t\t\t\ttype:\"line\",\n\t\t\t\t\t\tx:result.Wavelengths,\n\t\t\t\t\t\ty:divide(square(result[\"EY\"][state.selectedRatio][state.selectedST][state.selectedDataType]),square(result[\"EZ\"][state.selectedRatio][state.selectedST][\"Incident\"]))\n\t\t\t\t\t}])\t\t\t\t\t\n\t\t\t\t}\n\t\t\t  }else{\n\t\t\t\t  alert(\"please select from every part!!!\")\n\t\t\t  } \n\t\t  }}> Add data to Chart</button>\n\t  \t<button type=\"button\" className=\" btn btn-light mr-1\" \n\t\t  onClick={()=>{setstate({\n\t\t\t  selectedOption:\"\",\n\t\t\t  selectedPolarization:\"\",\n\t\t\t  selectedRatio:\"\",\n\t\t\t  selectedST:\"\",\n\t\t\t  selectedDataType:\"\"\n\t\t  })}}> Clear changes</button>\n\t\t  <button type=\"button\" className=\" btn btn-light \" onClick={()=>{\n\t\t\t  dataSetter([])\n\t\t  }}>Clear Graph</button>\n\t\t  </div>\n\t\t  </div>\n\t)\n}\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar } from './components/Navbar';\nimport { SimShow } from './components/SimShow';\nimport { SimAddData } from './components/SimAddData';\nimport DataContextProvider from './DataContext';\nimport ViewportProvider from \"./ViewPortContext\";\n\nfunction App() {\n  return (\n    <div className=\"App \">\n    <DataContextProvider>\n    <ViewportProvider>\n    <Navbar/>\n    <SimShow/>\n    <SimAddData/> \n    </ViewportProvider>\n    </DataContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport App from './App';\nrequire( \"bootstrap\")\n\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}