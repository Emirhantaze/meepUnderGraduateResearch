{"version":3,"sources":["components/Navbar.jsx","DataContext.jsx","components/SimShow.jsx","lib/MathOperations.js","components/SimAddData.jsx","App.jsx","index.js"],"names":["Navbar","className","href","DataContext","createContext","DataContextProvider","props","useState","data","dataSetter","Provider","value","children","SimShow","useContext","layout","title","config","scrollZoom","divideTwoArray","array1","array2","map","key","SimAddData","selectedOption","selectedPolarization","selectedRatio","selectedST","selectedDataType","state","setstate","ratioTypeCount","Object","keys","entries","result","spacingTypeCount","type","onClick","alt","src","style","height","width","uuid","iter","check","x","Wavelengths","y","divide","alert","App","require","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27fb7f51.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Navbar = () => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-dark bg-dark\">>\n  <a className=\"navbar-brand\" href=\"https://github.com/emtiyl/meepUnderGraduateResearch\">Github Page</a>\n\n    <ul className=\"navbar-nav mr-auto list-group-horizontal\">\n      <li className=\"nav-item mr-2\">\n        <a className=\"nav-link\" href=\"https://github.com/emtiyl/meepUnderGraduateResearch/graphs/contributors\">Contributers <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"https://github.com/emtiyl/meepUnderGraduateResearch/blob/master/README.md\">ReadMe</a>\n      </li>\n    </ul>\n    <span className=\"navbar-text\">\n      Stretching Transmission Spectrum Simulations of Gold with Meep\n    </span>\n\n</nav>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { createContext } from 'react'\n\n\nexport const DataContext = createContext()\n\n\nexport default function DataContextProvider(props) {\n    const [data,dataSetter] = useState([])\n    return (\n        <div>\n            <DataContext.Provider value={\n                {data:data,dataSetter:dataSetter}\n            }>{props.children}</DataContext.Provider> \n        </div>\n    )\n}\n","import React from 'react'\nimport Plot from 'react-plotly.js';\nimport { useContext } from 'react';\nimport { DataContext } from '../DataContext';\n\nexport const SimShow = () => {\n  const {data} = useContext(DataContext)\n    return (\n        <div >\n            <Plot \n        data={data}\n        layout={ {title: 'Simulation results'} }\n        config={{scrollZoom: true}}\n      />\n        </div>\n    )\n}\n","export const divideTwoArray = (array1,array2) =>{\n    return array1.map((value,key)=>{\n        return(value/array2[key])\n    }) \n\n}","import React, { useContext, useState } from 'react'\nimport { DataContext } from '../DataContext'\nimport uuid from 'uuid/dist/v1'\nimport result from \"../results.json\"\nimport {divideTwoArray as divide} from \"../lib/MathOperations\"\n\nexport const SimAddData = () => {\n\tconst [state, setstate] = useState({\n\t\tselectedOption:\"\",\n\t\tselectedPolarization:\"\",\n\t\tselectedRatio:\"\",\n\t\tselectedST:\"\",\n\t\tselectedDataType:\"\"\n\t})\n\tconst {data,dataSetter} = useContext(DataContext)\n\tlet ratioTypeCount = Object.keys(Object.entries(result)[0][1])\n\tlet spacingTypeCount = Object.keys(Object.entries(Object.entries(result)[0][1])[0][1])\n\treturn (\n\t\t<div>\n        <div className=\"card text-center\">\n        <div className=\"card-header rounded\">\n          Select right to left Simulation Specs to add appropriate data to the chart \n        </div>\n        <div className=\"card-body\">\n\t<div className=\"container-fluid m-auto p-auto\">\n\n\t<div className=\"row align-middle\">\n\n\t\t<div className=\"col my-auto\">\n\t\t\t<div className=\"list-group\">\n\t\t\t\t<button type=\"button\" className=\"list-group-item list-group-item-action disabled\"\n\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedOption:\"PolarizationR\"\n\t\t\t\t})}}\n\t\t\t\t>Polarization R.</button>\n\t\t\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tselectedOption:\"Normal\"\n\t\t\t\t\t\t\t})}}>Direct data</button>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t\t<div className=\"col my-auto\">\n\t\t<div className=\"list-group\">\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\t\t\t\t\n\t\t\t\tonClick={()=>{setstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedPolarization:\"EZ\"\n\t\t\t\t})}}>Ez</button>\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\tonClick={()=>{setstate({\n\t\t\t...state,\n\t\t\tselectedPolarization:\"EY\"\n\t\t})}}>Ey</button>\n\t\t</div>\n\t\n    </div><div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t\t<div className=\"col my-auto\">\n\t\t\t<div className=\"list-group\">\n\t\t\t\t {ratioTypeCount.map(value => {\n\t\t\t\t\t return <button key={uuid()} type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\t\t onClick={()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedRatio: value\n\t\t\t\t\t\t})\n\t\t\t\t\t }}\n\t\t\t\t\t >{value}</button>\n\t\t\t\t })}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t<div className=\"col my-auto\">\n\t\t\t<div className=\"list-group\">\n\t\t\t\t {spacingTypeCount.map(value => {\n\t\t\t\t\t return <button key={uuid()} type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\t\t onClick={()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedST: value\n\t\t\t\t\t\t})\n\t\t\t\t\t }}\n\t\t\t\t\t >{value}</button>\n\t\t\t\t })}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t<div className=\"my-auto\" >\n\t<img alt=\"\" className=\"\" src=\"https://image.flaticon.com/icons/svg/109/109617.svg\" style={{height:\"25px\",width:\"25px\"}}></img></div>\n\t<div className=\"col my-auto\"  >\n\t\t<div className=\"list-group\">\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\tonClick={\n\t\t\t()=>{\n\t\t\t\tsetstate({\n\t\t\t\t\t...state,\n\t\t\t\t\tselectedDataType: \"Transmission\"\n\t\t\t\t})\n\t\t\t}\n\t\t}>Transmission</button>\n\t\t<button type=\"button\" className=\"list-group-item list-group-item-action\"\n\t\t\t\tonClick={\n\t\t\t\t\t()=>{\n\t\t\t\t\t\tsetstate({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tselectedDataType: \"Reflected\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}>Reflected</button>\n\t\t</div>\n\t</div>\n  </div>\n</div>\n            </div>\n\t<div className=\"card-header rounded\">Selected Simulation Specs: {Object.entries(state).map(iter =>{\n\t\treturn `/${iter[1]}`\n\t})}</div>\n\n      </div>\n\t  <div className=\"text-center\">\n\t  <button type=\"button\" className=\" btn btn-primary mr-3\" \n\t\t  onClick={()=>{\n\t\t\t  let check = true;\n\t\t\t  Object.entries(state).map(iter=>{\n\t\t\t\t  if(iter[1]===\"\")\n\t\t\t\t\tcheck = false;\n\t\t\t\t\treturn true\n\t\t\t  })\n\t\t\t  if(check){\n\t\t\t\t  if(state.selectedOption===\"Direct data\"){\n\t\t\t\tdataSetter([...data,{\n\t\t\t\t\ttype:\"line\",\n\t\t\t\t\tx:result.Wavelengths,\n\t\t\t\t\ty:divide(result[state.selectedPolarization][state.selectedRatio][state.selectedST][state.selectedDataType],result[state.selectedPolarization][state.selectedRatio][state.selectedST][\"Incident\"])\n\t\t\t\t}])}else{\n\t\t\t\t\tdataSetter([...data,{\n\t\t\t\t\t\ttype:\"line\",\n\t\t\t\t\t\tx:result.Wavelengths,\n\t\t\t\t\t\ty:divide(result[state.selectedPolarization][state.selectedRatio][state.selectedST][state.selectedDataType],result[state.selectedPolarization][state.selectedRatio][state.selectedST][\"Incident\"])\n\t\t\t\t\t}])\t\t\t\t\t\n\t\t\t\t}\n\t\t\t  }else{\n\t\t\t\t  alert(\"please select from every part!!!\")\n\t\t\t  } \n\t\t  }}> Add data to Chart</button>\n\t  \t<button type=\"button\" className=\" btn btn-secondary mr-3\" \n\t\t  onClick={()=>{setstate({\n\t\t\t  selectedOption:\"\",\n\t\t\t  selectedPolarization:\"\",\n\t\t\t  selectedRatio:\"\",\n\t\t\t  selectedST:\"\",\n\t\t\t  selectedDataType:\"\"\n\t\t  })}}> Clear changes</button>\n\t\t  <button type=\"button\" className=\" btn btn-secondary \" onClick={()=>{\n\t\t\t  dataSetter([])\n\t\t  }}>Clear Graph</button>\n\t\t  </div>\n\t\t  </div>\n    )\n}\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar } from './components/Navbar';\nimport { SimShow } from './components/SimShow';\nimport { SimAddData } from './components/SimAddData';\nimport DataContextProvider from './DataContext';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <DataContextProvider>\n      \n    <Navbar/>\n    <SimShow/>\n    <SimAddData/> \n    \n    </DataContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport App from './App';\nrequire( \"bootstrap\")\n\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}